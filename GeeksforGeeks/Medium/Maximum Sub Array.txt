#include <bits/stdc++.h>

using namespace std;

 // } Driver Code Ends
//User function template for C++
class Solution{
public:
	vector<int> findSubarray(int a[], int n) {
    // code here
    vector<int> vec(1, -1);
    int dist = -1, temp_sum = 0, sum = 0;
    int s_idx, e_idx;
    for(int i=0, j; i<n; i++)
    {
        if(a[i]<0) continue;
        temp_sum = 0;
        for(j=i; j<n; j++)
        {
            if(a[j]>=0) {
                temp_sum += a[j];
                temp_sum %= 1000000007;
            }
            else break;
        }
        j--;

        if(temp_sum>sum) sum = temp_sum, dist = j-i, s_idx = i, e_idx = j;
        else if(temp_sum==sum &&  j-i>dist) dist = j-i, s_idx = i, e_idx = j;

        i = j;
    }
    
    if(dist > -1) {
        vec.clear();
        for(int k=s_idx; k<=e_idx; k++) vec.push_back(a[k]);
    }
    return vec;
}
};

// { Driver Code Starts.

void printAns(vector<int> &ans) {
    for (auto &x : ans) {
        cout << x << " ";
    }
    cout << "\n";
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        cin >> n;
        int a[n];
        for (i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        auto ans = ob.findSubarray(a, n);
        printAns(ans);
    }
    return 0;
}
  // } Driver Code Ends