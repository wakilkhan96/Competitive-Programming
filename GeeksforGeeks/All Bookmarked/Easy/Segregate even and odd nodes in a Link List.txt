
#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data <<" "; 
        node = node->next; 
    }  
    cout<<"\n";
} 


 // } Driver Code Ends
//User function template for C++

/*
struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
*/
class Solution{
public:
    Node* divide(int N, Node *head) {
        // code here
        Node* odd = NULL;
        Node* oddStart = NULL;
        Node* even = NULL;
        Node* evenStart = NULL;
        Node* cur = head;
        Node* temp = NULL;
        while(cur != NULL) {
            temp = cur;
            cur = cur->next;
            if(temp->data%2 == 1) {
                if(oddStart==NULL) {
                    oddStart = temp;
                    odd = temp;
                    continue;
                }
                odd->next = temp;
                odd = odd->next;
            }
            else {
                if(evenStart==NULL) {
                    evenStart = temp;
                    even = temp;
                    continue;
                }
                even->next = temp;
                even = even->next;
            }
        }
        if(evenStart == NULL && oddStart == NULL) return NULL; 
        else if(evenStart == NULL) return oddStart;
        else if(oddStart == NULL) {
            even->next = NULL;
            return evenStart;
        }
        
        even->next = oddStart;
        if(odd != NULL) odd->next = NULL;
        
        return evenStart;
    }
};

// { Driver Code Starts.

int main() {
    //code
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int data;
        cin>>data;
        struct Node *head = new Node(data);
        struct Node *tail = head;
        for (int i = 0; i < N-1; ++i)
        {
            cin>>data;
            tail->next = new Node(data);
            tail = tail->next;
        }
        
        Solution ob;
        Node *ans = ob.divide(N, head);
        printList(ans); 
    }
    return 0;
}
  // } Driver Code Ends