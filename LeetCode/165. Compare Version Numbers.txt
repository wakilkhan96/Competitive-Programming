class Solution {
public:
    int compareVersion(string version1, string version2) {
        int revision1, revision2;
        
        int max_size = max(version1.size(), version2.size());
        revision1 = 0, revision2 = 0;
        for(int i=0, j=0; ; ) {
            revision1 = 0, revision2 = 0;
            
            while(i<version1.size() && version1[i]!='.') revision1 = revision1*10+(version1[i++]-'0');
            while(j<version2.size() && version2[j]!='.') revision2 = revision2*10+(version2[j++]-'0');
            
            // cout<<i<<"-"<<j<<endl;
            // cout<<revision1<<" "<<revision2<<endl;
            
            if(revision1 > revision2) return 1;
            else if(revision1 < revision2) return -1;
            
            
            if(version1[i]=='\0'&& version2[j]=='\0') break;
            
            if(i<version1.size()) i++;
            if(j<version2.size()) j++;
        }
        return 0;
    }

};


Success
Details 
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Compare Version Numbers.
Memory Usage: 6 MB, less than 95.20% of C++ online submissions for Compare Version Numbers.