/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool treeTrversal(TreeNode* root, int pathSum, int targetSum) {
        if(root==nullptr) return false;
        pathSum = pathSum + root->val;
        if(root->left==nullptr && root->right==nullptr && pathSum==targetSum) return true;
        return treeTrversal(root->left, pathSum, targetSum) || treeTrversal(root->right, pathSum, targetSum);
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        ios_base::sync_with_stdio(0);
        if(root==nullptr) return false;
        return treeTrversal(root, 0, targetSum);
    }
};


Success
Details 
Runtime: 4 ms, faster than 98.73% of C++ online submissions for Path Sum.
Memory Usage: 21.2 MB, less than 74.87% of C++ online submissions for Path Sum.