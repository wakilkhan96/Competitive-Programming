class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> mp;
        priority_queue<pair<int, int> > pq;
        
        for(int i=0; i<nums.size(); i++) mp[nums[i]]++;
    
        for(auto it=mp.begin(); it!=mp.end(); it++) {
            pq.push({it->second, it->first});
            // cout<<it->second<<" - "<<it->first<<endl;
        }
        
        vector<int> ans;
        while(k) {
            pair<int, int> p = pq.top();
            pq.pop();
            ans.push_back(p.second);
            k--;
        }
        return ans;
    }
};