class Solution {
public:
    int minSteps(string s, string t) {
        unordered_map<char, int> mp_s,mp_t;
        for(int i=0; i<s.size(); i++) mp_s[s[i]]++;
        for(int i=0; i<t.size(); i++) mp_t[t[i]]++;
        
        int cou = 0;
        for(auto it=mp_s.begin(); it!=mp_s.end(); it++) {
            char ch = it->first;
            if(mp_t[ch]<mp_s[ch]) cou += mp_s[ch] - mp_t[ch];
        }
        
        return cou;
    }
};








sample 27 ms submission

class Solution {
public:
    Solution(){
        ios::sync_with_stdio(0); cout.tie(0); cin.tie(0);
    }
    int minSteps(string s, string t) {
        vector<int>ms(26,0);
        int res=0;
        for(char x:s)ms[x-'a']++;
        for(char x:t)ms[x-'a']--;
        for(auto x:ms){
            if(x>0){
                res+=x;
            }
        }
        return res;
    }
};


sample 15 ms submission

class Solution {
public:
    int minSteps(string s, string t) {
        ios_base::sync_with_stdio(false); cin.tie(0);
        int hash1[26] = {};
        int sum = 0,n = s.size(),m = t.size();
        for(int i=0;i<n;i++)
        {
            hash1[s[i]-'a']++;
        }
        for(int i=0;i<m;i++)
        {
            if(hash1[t[i]-'a']>0)hash1[t[i]-'a']--;
            else sum++;
        }
        return sum;
    }
};