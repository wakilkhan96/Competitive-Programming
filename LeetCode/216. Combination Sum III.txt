class Solution {
public:
    vector<vector<int>> ans;
    vector<int> combination;
    
    int numbers[9] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    int used[9] = {0, 0, 0, 0, 0, 0, 0, 0, 0};
    
    void solve(int index, int n, int k) {
        if(k==0 && n==0) {
            ans.push_back(combination);
            return;
        }
        if(index>=9 || k<0 || n<0) return;
        
        //if current index is not used and we want to take current index value
        if(used[index]==0) {
            combination.push_back(numbers[index]);
            used[index] = 1;
            solve(index+1, n-numbers[index], k-1);
            combination.pop_back();
            used[index] = 0;
        }
        
        // if we do not want to take current index value
        solve(index+1, n, k);
    }
    
    vector<vector<int>> combinationSum3(int k, int n) {
        
        solve(0, n, k);
        
        return ans;
    }
};