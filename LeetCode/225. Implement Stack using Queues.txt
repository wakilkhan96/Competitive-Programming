class MyStack {
public:
    queue<int> q;
    MyStack() {
    }
    
    void push(int x) {
        q.push(x);
    }
    
    int pop() {
        int front;
        int size = q.size();
        while(--size) {
            front = q.front();
            q.pop();
            q.push(front);
        }
        front = q.front();
        q.pop();
        
        return front;
    }
    
    int top() {
        int i = q.back();
        return i;
    }
    
    bool empty() {
        if(q.empty()) return true;
        return false;
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
 
 
 
 
 
 
 
 
 
 Success
Details 
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Implement Stack using Queues.
Memory Usage: 6.8 MB, less than 87.37% of C++ online submissions for Implement Stack using Queues.