/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int treeTraversal(TreeNode* grandParent, TreeNode* parent, TreeNode* root) {
        if(root==nullptr) return 0;
        
        TreeNode* child1 = root->left;
        TreeNode* child2 = root->right;
        int sum = 0;
        if(grandParent!=nullptr && parent!=nullptr) {
            if(grandParent->val%2==0) sum += root->val;
        }
        sum += treeTraversal(parent, root, child1);
        sum += treeTraversal(parent, root, child2);
        
        return sum;
    }
    int sumEvenGrandparent(TreeNode* root) {
        return treeTraversal(nullptr, nullptr, root);
    }
};