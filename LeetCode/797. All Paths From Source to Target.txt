class Solution {
public:
    vector<vector<int>> paths;
    vector<int>path;
    void traverseGraph(int node, vector<vector<int>>& graph) {
        if(node==graph.size()-1) {
            paths.push_back(path);
            return;
        }
        
        for(int i=0; i<graph[node].size(); i++) {
            path.push_back(graph[node][i]);
            traverseGraph(graph[node][i], graph);
            path.pop_back();
        }
        
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        path.push_back(0);
        traverseGraph(0, graph);
        return paths;
    }
};