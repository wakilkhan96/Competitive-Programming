class MyQueue {
public:
    stack<int> st;
    
    MyQueue() {
        
    }
    
    void push(int x) {
        stack<int> temp;
        while(!st.empty()) {
            int top = st.top();
            st.pop();
            temp.push(top);
        }
        st.push(x);
        while(!temp.empty()) {
            int top = temp.top();
            temp.pop();
            st.push(top);
        }
    }
    
    int pop() {
        int top = st.top();
        st.pop();
        return top;
    }
    
    int peek() {
        int top = st.top();
        return top;
    }
    
    bool empty() {
        if(st.empty()) return true;
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
 
 
 
 
 Success
Details 
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Implement Queue using Stacks.
Memory Usage: 6.9 MB, less than 87.38% of C++ online submissions for Implement Queue using Stacks.