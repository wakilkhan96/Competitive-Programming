class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        // for(int i=0; i<mat.size(); i++) {
        //     for(int j=0; j<mat[i].size(); j++) cout<<mat[i][j]<<" ";
        //     cout<<endl;
        // }
        // cout<<endl;
        
        // upper right part
        for(int k=0; k<mat[0].size(); k++) {
            // for(int i=0, j=k; i<mat.size() && j<mat[i].size(); i++, j++) cout<<mat[i][j]<<" ";
            // cout<<endl;
            
            vector<int> v;
            for(int i=0, j=k; i<mat.size() && j<mat[i].size(); i++, j++) v.push_back(mat[i][j]);
            sort(v.begin(), v.end());
            int index = 0;
            for(int i=0, j=k; i<mat.size() && j<mat[i].size(); i++, j++) mat[i][j] = v[index++];
            
        }
        
        // lower left part
        for(int k=1; k<mat.size(); k++) {
            // for(int i=k, j=0; i<mat.size() && j<mat[i].size(); i++, j++) cout<<mat[i][j]<<" ";
            // cout<<endl;
            
            vector<int> v;
            for(int i=k, j=0; i<mat.size() && j<mat[i].size(); i++, j++) v.push_back(mat[i][j]);
            sort(v.begin(), v.end());
            int index = 0;
            for(int i=k, j=0; i<mat.size() && j<mat[i].size(); i++, j++) mat[i][j] = v[index++];
        }
        return mat;
    }
};